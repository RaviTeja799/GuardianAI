rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Default deny all
    match /{allPaths=**} {
      allow read, write: if false;
    }
    
    // Post images
    match /posts/{postId}/{fileName} {
      // Anyone can read images for approved posts
      allow read: if firestore.exists(/databases/(default)/documents/preprocessed_data/$(postId)) &&
                    firestore.get(/databases/(default)/documents/preprocessed_data/$(postId)).data.status == 'APPROVED';
      
      // Users can read their own post images
      allow read: if request.auth != null &&
                    firestore.exists(/databases/(default)/documents/preprocessed_data/$(postId)) &&
                    firestore.get(/databases/(default)/documents/preprocessed_data/$(postId)).data.user_id == request.auth.uid;
      
      // Moderators can read any post images
      allow read: if request.auth != null &&
                    firestore.exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
                    firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.isModerator == true;
      
      // Only authenticated users can upload images
      allow create: if request.auth != null &&
                      request.resource.size < 5 * 1024 * 1024 && // Limit to 5MB
                      request.resource.contentType.matches('image/.*'); // Must be an image
                      
      // Only post creators can modify their post images
      allow update, delete: if request.auth != null &&
                             firestore.exists(/databases/(default)/documents/preprocessed_data/$(postId)) &&
                             firestore.get(/databases/(default)/documents/preprocessed_data/$(postId)).data.user_id == request.auth.uid;
    }
    
    // User avatar images
    match /avatars/{userId}/{fileName} {
      allow read: if true; // Public access to avatars
      allow create, update, delete: if request.auth != null && request.auth.uid == userId;
    }
  }
}